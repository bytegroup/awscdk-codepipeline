{
 "Resources": {
  "minemapappserverprojectRole3CC4BBE7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-project/Role/Resource"
   }
  },
  "minemapappserverprojectRoleDefaultPolicy70C8727F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:secretsmanager:ap-northeast-1:716993826013:secret:github-secret-token-0oR5Qz",
        "arn:aws:secretsmanager:ap-northeast-1:716993826013:secret:github-secret-token-0oR5Qz*"
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:ap-northeast-1:716993826013:log-group:/aws/codebuild/",
           {
            "Ref": "minemapappserverproject5FFFA308"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:ap-northeast-1:716993826013:log-group:/aws/codebuild/",
           {
            "Ref": "minemapappserverproject5FFFA308"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:ap-northeast-1:716993826013:report-group/",
          {
           "Ref": "minemapappserverproject5FFFA308"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:CompleteLayerUpload",
        "ecr:GetDownloadUrlForLayer",
        "ecr:InitiateLayerUpload",
        "ecr:PutImage",
        "ecr:UploadLayerPart"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "mine-map-app-server-ecr-stack:ExportsOutputFnGetAttminemapappserverA6D0C2EAArn732D1845"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineArtifactsBucket502134C1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "minemapappserverpipelineArtifactsBucket502134C1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "minemapappserverprojectRoleDefaultPolicy70C8727F",
    "Roles": [
     {
      "Ref": "minemapappserverprojectRole3CC4BBE7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-project/Role/DefaultPolicy/Resource"
   }
  },
  "minemapappserverproject5FFFA308": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "REPOSITORY_URI",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "mine-map-app-server-ecr-stack:ExportsOutputFnGetAttminemapappserverA6D0C2EAArn732D1845"
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::ImportValue": "mine-map-app-server-ecr-stack:ExportsOutputFnGetAttminemapappserverA6D0C2EAArn732D1845"
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Fn::ImportValue": "mine-map-app-server-ecr-stack:ExportsOutputRefminemapappserverA6D0C2EA7ED34876"
          }
         ]
        ]
       }
      },
      {
       "Name": "AWS_ACCOUNT_ID",
       "Type": "PLAINTEXT",
       "Value": "716993826013"
      },
      {
       "Name": "AWS_STACK_REGION",
       "Type": "PLAINTEXT",
       "Value": "ap-northeast-1"
      },
      {
       "Name": "GITHUB_AUTH_TOKEN",
       "Type": "SECRETS_MANAGER",
       "Value": "arn:aws:secretsmanager:ap-northeast-1:716993826013:secret:github-secret-token-0oR5Qz"
      },
      {
       "Name": "CONTAINER_NAME",
       "Type": "PLAINTEXT",
       "Value": "mine-map-app-server-container"
      }
     ],
     "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "minemapappserverprojectRole3CC4BBE7",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"env\": {\n    \"shell\": \"bash\"\n  },\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"echo logging in to AWS ECR\",\n        \"aws --version\",\n        \"echo $AWS_STACK_REGION\",\n        \"echo $CONTAINER_NAME\",\n        \"aws ecr get-login-password --region ${AWS_STACK_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_STACK_REGION}.amazonaws.com\",\n        \"COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\",\n        \"echo $COMMIT_HASH\",\n        \"IMAGE_TAG=${COMMIT_HASH:=latest}\",\n        \"echo $IMAGE_TAG\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"echo Build started on `date`\",\n        \"echo Build Docker image\",\n        \"docker build -f ${CODEBUILD_SRC_DIR}/Dockerfile -t ${REPOSITORY_URI}:latest ./\",\n        \"echo Running \\\"docker tag ${REPOSITORY_URI}:latest ${REPOSITORY_URI}:${IMAGE_TAG}\\\"\",\n        \"docker tag ${REPOSITORY_URI}:latest ${REPOSITORY_URI}:${IMAGE_TAG}\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"echo Build completed on `date`\",\n        \"echo Push Docker image\",\n        \"docker push ${REPOSITORY_URI}:latest\",\n        \"docker push ${REPOSITORY_URI}:${IMAGE_TAG}\",\n        \"printf \\\"[{\\\\\\\"name\\\\\\\": \\\\\\\"$CONTAINER_NAME\\\\\\\", \\\\\\\"imageUri\\\\\\\": \\\\\\\"$REPOSITORY_URI:$IMAGE_TAG\\\\\\\"}]\\\" > docker_image_definition.json\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"docker_image_definition.json\"\n    ]\n  }\n}",
     "Location": "https://github.com/toggle-inc/mine_map_app_server.git",
     "ReportBuildStatus": true,
     "Type": "GITHUB"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
      "Arn"
     ]
    },
    "Name": "mine-map-app-server-project",
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ],
    "Triggers": {
     "Webhook": false
    }
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-project/Resource"
   }
  },
  "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::716993826013:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/ArtifactsBucketEncryptionKey/Resource"
   }
  },
  "minemapappserverpipelineArtifactsBucketEncryptionKeyAliasC69C7CEE": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/codepipeline-minemapappserverpipelinestackminemapappserverpipeline74bd63dd",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
   }
  },
  "minemapappserverpipelineArtifactsBucket502134C1": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/ArtifactsBucket/Resource"
   }
  },
  "minemapappserverpipelineArtifactsBucketPolicyB47FDF8B": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "minemapappserverpipelineArtifactsBucket502134C1"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineArtifactsBucket502134C1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "minemapappserverpipelineArtifactsBucket502134C1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "minemapappserverpipelineRole8FCCDE44": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Role/Resource"
   }
  },
  "minemapappserverpipelineRoleDefaultPolicyD1267981": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineArtifactsBucket502134C1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "minemapappserverpipelineArtifactsBucket502134C1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRole513F59B5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRole31D2C14B",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "minemapappserverpipelineRoleDefaultPolicyD1267981",
    "Roles": [
     {
      "Ref": "minemapappserverpipelineRole8FCCDE44"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "minemapappserverpipeline41DB61CA": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "minemapappserverpipelineRole8FCCDE44",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "toggle-inc",
         "Repo": "mine_map_app_server",
         "Branch": "master",
         "OAuthToken": "{{resolve:secretsmanager:github-secret-token:SecretString:::}}",
         "PollForSourceChanges": false
        },
        "Name": "Github",
        "OutputArtifacts": [
         {
          "Name": "Source"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "minemapappserverproject5FFFA308"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Source"
         }
        ],
        "Name": "mine-map-app-server-CodeBuild",
        "OutputArtifacts": [
         {
          "Name": "BuildOutput"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRole513F59B5",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "ECS",
         "Version": "1"
        },
        "Configuration": {
         "ClusterName": {
          "Fn::ImportValue": "mine-map-app-server-ecs-stack:ExportsOutputRefminemapappserverclusterA303E7662ADB22B1"
         },
         "ServiceName": {
          "Fn::ImportValue": "mine-map-app-server-ecs-stack:ExportsOutputFnGetAttminemapappserverfargateServiceEEFEA250Name6780D483"
         },
         "FileName": "docker_image_definition.json"
        },
        "InputArtifacts": [
         {
          "Name": "BuildOutput"
         }
        ],
        "Name": "mine-map-app-server-ECSDeploy",
        "RoleArn": {
         "Fn::GetAtt": [
          "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRole31D2C14B",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Deploy"
     }
    ],
    "ArtifactStore": {
     "EncryptionKey": {
      "Id": {
       "Fn::GetAtt": [
        "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
        "Arn"
       ]
      },
      "Type": "KMS"
     },
     "Location": {
      "Ref": "minemapappserverpipelineArtifactsBucket502134C1"
     },
     "Type": "S3"
    },
    "Name": "mine-map-app-server-pipeline",
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "DependsOn": [
    "minemapappserverpipelineRoleDefaultPolicyD1267981",
    "minemapappserverpipelineRole8FCCDE44"
   ],
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Resource"
   }
  },
  "minemapappserverpipelineSourceGithubWebhookResource91FF8A97": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:github-secret-token:SecretString:::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "TargetAction": "Github",
    "TargetPipeline": {
     "Ref": "minemapappserverpipeline41DB61CA"
    },
    "TargetPipelineVersion": 1,
    "RegisterWithThirdParty": true
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Source/Github/WebhookResource"
   }
  },
  "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRole513F59B5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::716993826013:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Build/mine-map-app-server-CodeBuild/CodePipelineActionRole/Resource"
   }
  },
  "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRoleDefaultPolicyD4A2869D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "minemapappserverproject5FFFA308",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRoleDefaultPolicyD4A2869D",
    "Roles": [
     {
      "Ref": "minemapappserverpipelineBuildminemapappserverCodeBuildCodePipelineActionRole513F59B5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Build/mine-map-app-server-CodeBuild/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRole31D2C14B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::716993826013:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "toggle-inc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Deploy/mine-map-app-server-ECSDeploy/CodePipelineActionRole/Resource"
   }
  },
  "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRoleDefaultPolicyFC7E0899": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTasks",
        "ecs:ListTasks",
        "ecs:RegisterTaskDefinition",
        "ecs:UpdateService"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEqualsIfExists": {
         "iam:PassedToService": [
          "ec2.amazonaws.com",
          "ecs-tasks.amazonaws.com"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "minemapappserverpipelineArtifactsBucket502134C1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "minemapappserverpipelineArtifactsBucket502134C1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "minemapappserverpipelineArtifactsBucketEncryptionKey1AB3C43D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRoleDefaultPolicyFC7E0899",
    "Roles": [
     {
      "Ref": "minemapappserverpipelineDeployminemapappserverECSDeployCodePipelineActionRole31D2C14B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/mine-map-app-server-pipeline/Deploy/mine-map-app-server-ECSDeploy/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PwQ6CMBBEv8V7WQVj4lU9eiF48GhKWePS0hIKGtP0320LiZzm7WQzO1tAcYDdhn9sJhqZKarB3UYuJAvWwwnTYD2RasCVg2lRjOzy1At6RrwDVxmF0U1aGkXim5YSeRYjeupRkcaQslDaWPEd65cx0jPZWXBXTBFRToq4jUMCz+we3HkSElOThWb5317P3qdyaM00CPRMhz7Q2u07P0IeXm8tUTZMeqQOoZr1BzlAly4WAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "mine-map-app-server-pipeline-stack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}